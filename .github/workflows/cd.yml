name: Swan-Z Style App CD

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
  KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/swan-z-style-app:${{ github.sha }}

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
      
      - name: Deploy to Kubernetes
        run: echo "$KUBE_CONFIG" | base64 -d > kubeconfig.yaml && kubectl --kubeconfig=kubeconfig.yaml set image deployment/swan-z-style-app swan-z-style-app=${{ env.DOCKER_REGISTRY }}/swan-z-style-app:${{ github.sha }}
      
      - name: Verify deployment
        run: kubectl --kubeconfig=kubeconfig.yaml rollout status deployment/swan-z-style-app

  run_tests:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Run integration tests
        run: npm run test:integration
      
      - name: Run E2E tests
        run: npm run test:e2e

  notify:
    needs: [deploy, run_tests]
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: Deployment to production completed
          channel: deployments
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}